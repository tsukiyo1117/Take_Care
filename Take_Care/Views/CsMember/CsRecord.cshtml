@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<style>
    .profile-head h3 {
        color: #333;
    }
</style>


@await Html.PartialAsync("_HeadPartial")

<body>
    <div class="container">
        <div class="row">
            <div class="col-2 ">
                <div class="row  " id="userPic">
                    <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS52y5aInsxSm31CvHOFHWujqUx_wWTS9iM6s7BAm21oEN_RiGoog"
                         alt="user">
                    <span class="row">
                        UserAccount
                    </span>
                </div>
                @await Html.PartialAsync("_SideBarPartial")
            </div>
            <div class="col-10" id="mainPage">
                <div class="container emp-profile" style="background-color:transparent">
                    <form method="post">

                        <div class="row">
                            <!-- 服務歷史紀錄 -->
                            <div class="col" id="CaseHistoryRecord">
                                <div class="">
                                    <div>
                                        <div class="divider__line"></div>
                                        <h2 class="text-center" style="font-weight: 900;">服務歷史記錄</h2>
                                        <div class="divider__line"></div>
                                        <p class="dismiss text-right"><a id="dismiss-all" href="#" class="btn btn-dark">取消全部</a></p>
                                    </div>
                                    <br>
                                    <!-- 用日期查詢紀錄 -->
                                    <div>
                                        <label style="font-size: 23px"><b>開始日期:</b></label>
                                        <input type="text" placeholder="YYYY-MM-DD" name="startdate" class="datepicker" style="width: 180px" v-model="startDate">
                                        &nbsp;&nbsp;

                                        <label style="font-size: 23px"><b>結束日期:</b></label>
                                        <input type="text" placeholder="YYYY-MM-DD" name="enddate" class="datepicker" style="width: 180px" v-model="endDate">
                                        &nbsp;&nbsp;

                                        <button @@click="filterRecords">查詢</button>


                                    </div>
                                    <!-- 表格 -->
                                    <div>
                                        <table class="table align-middle" style="margin-top: 40px;">
                                            <tr>
                                                <th colspan="4" style="background-color: azure;border-block: solid;"></th>
                                                <th colspan="3" style="background-color: azure;border-block: solid;">
                                                    <span style="font-size: 24px; float: right; margin-right: 60px;">
                                                        <b>金額合計: $<span>{{ totalAmount }}</span></b>
                                                    </span>
                                                </th>
                                            </tr>
                                            <tr style="font-size: 20px;text-align:center; ">
                                                <th style="background-color: burlywood;">編號</th>
                                                <th style="background-color: burlywood;">服務日期</th>
                                                <th style="background-color: burlywood;">服務時間</th>
                                                <th style="background-color: burlywood;">照服員名稱</th>
                                                <th style="background-color: burlywood;">服務項目</th>
                                                <th style="background-color: burlywood;">服務金額</th>
                                                <th style="background-color: burlywood;">繳費狀態</th>
                                            </tr>

                                            <tr style="font-size: 20px;text-align:center" v-for="Case in CaseList" :key="Case.caseId" v-show="!Case.hide">
                                                <td style="text-align: center;">
                                                    {{ Case.caseId }}
                                                </td>
                                                <td style="text-align: center;">
                                                    {{ Case.startDateTime.slice(0,10) }}
                                                </td>
                                                <td style="text-align: center;">
                                                    {{ Case.startDateTime.slice(11) }}
                                                </td>
                                                <td style="text-align: center;">
                                                    {{ Case.employeeName }}
                                                </td>
                                                <td style="text-align: center;">
                                                    {{ Case.serviceName }}
                                                </td>
                                                <td style="text-align: center;">
                                                    ${{ Case.amount }}
                                                </td>
                                                <td style="text-align: center;">
                                                    <a href="#" class="btn btn-outline-dark dismiss-notification" id="checkoutBtn"
                                                       v-if="Case.paymentStatus === false" @@click.prevent="checkout(Case)">未結帳</a>
                                                    <a href="#" class="btn btn-outline-dark dismiss-notification" id="checkoutBtn"
                                                       v-else>已結帳</a>
                                                    <a href="#" class="btn btn-outline-dark dismiss-notification" v-if="Case.caseStatus === false" @@click.prevent=" cancelService(Case)">取消</a>
                                                    <a href="#" class="btn btn-outline-dark dismiss-notification" v-else>已完成</a>
                                                </td>
                                            </tr>
                                        </table>
                                        <br>


                                    </div>
                                </div>
                            </div>

                        </div>
                    </form>

                </div>
            </div>
        </div>
    </div>
    @* <script src="~/js/CsMember/ECPay.js"></script> *@
    <script src="~/js/CsMember/profile.js"></script>
    <script src="~/js/CsMember/notification.js"></script>
    <script>
        const CaseHistoryRecord = Vue.createApp({
            data() {
                return {
                    CaseList: [],
                    caseId: "",
                    serviceName: "",
                    startDateTime: "",
                    startDate: "",
                    startTime: "",
                    amount: "",
                    paymentStatus: "",
                    caseStatus: "",
                    matchingCases2: "",
                    employeeNames: "",
                    totalAmount: 0,
                    endDate: "",
                };
            },
            mounted() {
                this.$nextTick(() => {
                    this.GetCaseForEmployer();
                    this.created();
                });
            },
            methods: {

                GetCaseForEmployer() {
                    $.ajax({
                        method: "GET",
                        url: "https://localhost:7036/api/Employers",
                        success: function (response) {
                            const account = JSON.parse(sessionStorage.getItem('member')).account;

                            // console.log(response);
                            response.forEach((data) => {
                                if (data.account == account) {
                                    sessionStorage.setItem('idForCase', JSON.stringify(data))
                                    // console.log('有成功抓到資料');

                                }
                            });


                        },
                        error: function (err) {
                            console.log(err);
                        }
                    })

                    $.ajax({
                        type: 'get',
                        url: 'https://localhost:7036/api/Cases',
                        success: (data) => {
                            // console.log(data);
                            var matchingCases = [];
                            var totalAmount = 0;
                            // 使用forEach遍历data数组
                            data.forEach((item) => {
                                // console.log(item)
                                if (item.employerId === JSON.parse(sessionStorage.getItem('idForCase')).employerId) {
                                    matchingCases.push(item)
                                    totalAmount += item.amount;
                                    // console.log('有成功抓到資料');
                                    // console.log(item)
                                    sessionStorage.setItem('Forcase', JSON.stringify(matchingCases))
                                    this.CaseList = item;
                                    console.log(this.CaseList)
                                    // sessionStorage.setItem('CaseList', JSON.stringify(item))

                                    this.caseId = item.caseId;
                                    // sessionStorage.setItem('caseId', item.caseId)
                                    // console.log(this.caseId)
                                    this.serviceName = item.serviceName;
                                    // console.log(this.serviceName)
                                    this.startDateTime = item.startDateTime;
                                    this.startDate = item.startDateTime.slice(0, 10);
                                    this.startTime = item.startDateTime.slice(10);
                                    this.amount = item.amount;
                                    this.paymentStatus = item.paymentStatus;
                                    this.caseStatus = item.caseStatus;
                                    this.totalAmount = totalAmount;
                                    console.log(this.totalAmount)

                                    // console.log(this.caseStatus)
                                }
                            });
                        },
                        error: (error) => {
                            console.error('Error:', error);
                        }
                    });

                    $.ajax({
                        type: 'get',
                        url: 'https://localhost:7036/api/Employees',
                        success: (data) => {
                            // console.log(data);

                            const caseData = JSON.parse(sessionStorage.getItem('Forcase'));
                            console.log('caseData:', caseData);
                            // 获取匹配的项目

                            if (caseData && caseData.length > 0) {
                                // 遍历caseData数组以查找匹配的employeeId
                                const matchingCases2 = [];
                                caseData.forEach((caseItem) => {
                                    const employeeIdToMatch = caseItem.employeeId;
                                    const matchingCase = data.find(item => item.employeeId === employeeIdToMatch);
                                    if (matchingCase) {
                                        matchingCases2.push(matchingCase);
                                    }
                                });


                                if (matchingCases2.length > 0) {
                                    console.log('匹配的项目:', matchingCases2);
                                    this.matchingCases2 = matchingCases2;
                                    console.log(this.matchingCases2);
                                    this.employeeNames = matchingCases2.map(item => item.employeeName);
                                    console.log(this.employeeNames)
                                    sessionStorage.setItem('employeeNames', JSON.stringify(matchingCases2))
                                } else {
                                    console.log('没有匹配的项目。');
                                }
                            } else {
                                console.log('caseData為undefined或null');
                            }


                        },
                        error: (error) => {
                            console.error('Error:', error);
                        }
                    });
                },
                created() {
                    // 从 sessionStorage 中获取数据
                    const storedData = JSON.parse(sessionStorage.getItem('Forcase'));
                    const storedData2 = JSON.parse(sessionStorage.getItem('employeeNames'));
                    if (storedData) {
                        // 将数据分配给 Vue 数据属性
                        this.CaseList = storedData;
                        // 分配其他数据属性
                    }
                    // 获取"照服員名稱"数据
                    const employeeNames = JSON.parse(sessionStorage.getItem('employeeNames'));
                    if (employeeNames) {
                        // 遍历CaseList并将相应的"照服員名稱"应用到每个案例
                        this.CaseList.forEach((Case, index) => {
                            Case.employeeName = employeeNames[index].employeeName;
                        });
                    }
                    // 计算总金额
                    this.totalAmount = this.CaseList.reduce((total, item) => total + item.amount, 0);

                },
                filterRecords() {
                    // 获取用户输入的开始日期和结束日期
                    const startDateObject = new Date(this.startDate);
                    const endDateObject = new Date(this.endDate);
                    console.log('startDateObject:', startDateObject);
                    console.log('endDateObject:', endDateObject);

                    // 使用日期范围过滤服务记录
                    const filteredRecords = this.CaseList.filter((record) => {
                        const recordDate = new Date(record.startDateTime.slice(0, 10));
                        return recordDate >= startDateObject && recordDate <= endDateObject;
                    });
                    // 更新 CaseList 以仅包含过滤后的记录
                    this.CaseList = filteredRecords;

                    // 重新计算总金额
                    this.totalAmount = this.CaseList.reduce((total, item) => total + item.amount, 0);
                },

                cancelService(Case) {
                    if (Case.paymentStatus === false) {
                        // 找到要隐藏的案件在CaseList中的索引
                        const index = this.CaseList.findIndex(item => item === Case);
                        if (index !== -1) {
                            // 从CaseList中移除这个案件
                            this.CaseList.splice(index, 1);
                        }
                    } else {
                        // 如果案件已结账，你可以在此处添加一些提示或处理逻辑
                        // 例如，弹出一个提示框或显示一条消息
                        alert('无法取消已结账的案件');
                    }
                },
                checkout(Case) {
                    // 创建 JSON 对象
                    const json = {
                        CaseId: Case.caseId,
                        Amount: Case.amount,
                        ServiceName: Case.serviceName
                    };

                    // 发送 POST 请求到服务器
                    $.ajax({
                        type: 'POST',
                        url: 'https://localhost:7036/ECPay/DoTestPay',
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(json),
                        success: function (res) {
                            // 构建表单
                            const form = document.createElement('form');
                            form.method = 'post';
                            form.action = 'https://payment-stage.ecpay.com.tw/Cashier/AioCheckOut/V5'; // 綠界金流驗證網址(測試環境)
                            form.target = "_blank";

                            // 将服务器响应中的数据用于构建表单
                            for (const key in res) {
                                if (res.hasOwnProperty(key)) {
                                    const hiddenField = document.createElement('input');
                                    hiddenField.type = 'hidden';
                                    hiddenField.name = key;
                                    hiddenField.value = res[key];
                                    form.appendChild(hiddenField);
                                }
                            }

                            // 添加表单到文档并提交
                            document.body.appendChild(form);
                            form.submit();

                            Case.paymentStatus = true;

                            // 重定向回历史纪录页面
                            // window.location.href = 'CsRecord'; // 请替换为你的历史纪录页面的实际 URL
                        },
                        error: function (err) {
                            console.log(err);
                        },
                    });
                }
            }
        });

        CaseHistoryRecord.mount("#CaseHistoryRecord");



        $(".datepicker").datepicker({
            dateFormat: "yy-mm-dd"
        });
    </script>

</body>